//--------------------------------------------------------
//dopln veci podla podmienok + graf tam plesni
//--------------------------------------------------------
GitHub Copilot is an artificial intelligence tool developed by GitHub and OpenAI to assist users of Visual Studio Code, Visual Studio, Neovim, and JetBrains integrated 
development enviroments (IDEs) by autocompleting code. Currently only available as a technical preview, the tool was first announced by GitHub on 29 June 2021, and works 
best for users coding in Python, JavaScript, TypeScript, Ruby, and Go.

GitHub Copilot is powered by the OpenAI Codex, an artificial intelligence model created by OpenAI which is an artificial intelligence research laboratory. The OpenAI Codex is a 
modified, production version of the GPT-3, a language model using deep-learning to produce text like a human. For example, when provided with a programming problem 
in natural language, Codex is capable of generating solution code. It is also able to describe input code in English and translate code between programming languages. 
Codex’s GPT-3 is licensed exclusively to Microsoft, GitHub’s parent company.

Copilot’s OpenAI Codex is trained on a selection of the English language, public GitHub repositories, and other publicly available source code. 
This includes a filtered dataset of 159 gigabytes of Python code sourced from 54 million public GitHub repositories.

According to its website, GitHub Copilot includes assistive features for programmers, such as the conversion of code comments to runnable code and 
autocomplete for chunks of code, repetitive sections of code, and entire methods and/or functions. GitHub reports that Copilot’s autocomplete feature 
is accurate roughly half of the time; with some Python function header code, for example, Copilot correctly autocompleted the rest of the 
function body code 43% of the time on the first try and 57% of the time after ten attempts.

GitHub states that Copilot’s features allow programmers to navigate unfamiliar coding frameworks and languages by reducing the amount of time users spend reading documentation.

Since Copilot's release, there have been concerns with its security and educational impact, as well as licensing controversy surrounding the code it produces.

Licensing Controversy
Although most code outputted by Copilot can be classified as a transformative work, GitHub admits that a small proportion is copied verbatim, 
which has led to fears that the outputted code is insufficiently transformative enough to be classified as fair use and may infringe on the copyright of the original owner. 
This leaves Copilot on untested legal ground, although GitHub states that 
"training machine learning models on publicly available data is considered fair use across the machine learning community".

Security concerns
A paper accepted for publication in the IEEE Symposium on Security and Privacy in 2022 assessed the security of code generated by Copilot for the MITRE’s top 25 code weakness enumerations 
(e.g., cross-site scripting, path traversal) across 89 different scenarios and 1,689 programs.
The study found that across these axes in multiple languages, 39.33% of top suggestions and 40.73% of total suggestions lead to code vulnerabilities. 
Additionally, they found that small, non-semantic (i.e., comments) changes made to code could impact code safety.

Education concerns
A February 2022 paper released by the Association for Computing Machinery evaluates the impact Codex, the technology used by Github Copilot, may have on the education of novice programmers.
Researchers found that Codex, on average, performed better than most students; however, its performance decreased on questions that limited what features could be used in the solution 
(e.g., conditionals, collections, and loops). Given this type of problem, “only two of [Codex’s] 10 solutions produced the correct output, but both [...] violated [the] constraint.” 
The paper concludes that Codex may be useful in providing a variety of solutions to learners, but may also lead to over-reliance and plagiarism.